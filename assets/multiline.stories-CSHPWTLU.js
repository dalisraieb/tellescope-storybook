import{b as k,u as U,_ as w,c as p,j as l,d as S}from"./iframe-B7GmmWET.js";import{C as j}from"./checkbox-ByBGrJmC.js";import{a as A,g as B,c as T,s as M,b as W}from"./TransitionGroupContext-DH3ylQVC.js";import{f as I}from"./formControlState-Dq1zat_P.js";import{u as H}from"./useFormControl-CQZufoXh.js";import{T as x}from"./Typography-DTzo3WMc.js";import{S as K}from"./Stack-DMNzBvHx.js";import"./SwitchBase-CI53M7XM.js";import"./createSvgIcon-2es58OvH.js";import"./ButtonBase-DJZqM7gK.js";import"./useIsFocusVisible-Cj5ep0R0.js";function Y(e){return B("MuiFormControlLabel",e)}const n=A("MuiFormControlLabel",["root","labelPlacementStart","labelPlacementTop","labelPlacementBottom","disabled","label","error","required","asterisk"]),G=["checked","className","componentsProps","control","disabled","disableTypography","inputRef","label","labelPlacement","name","onChange","required","slotProps","value"],J=e=>{const{classes:o,disabled:a,labelPlacement:i,error:s,required:r}=e,b={root:["root",a&&"disabled",`labelPlacement${S(i)}`,s&&"error",r&&"required"],label:["label",a&&"disabled"],asterisk:["asterisk",s&&"error"]};return W(b,Y,o)},Q=M("label",{name:"MuiFormControlLabel",slot:"Root",overridesResolver:(e,o)=>{const{ownerState:a}=e;return[{[`& .${n.label}`]:o.label},o.root,o[`labelPlacement${S(a.labelPlacement)}`]]}})(({theme:e,ownerState:o})=>p({display:"inline-flex",alignItems:"center",cursor:"pointer",verticalAlign:"middle",WebkitTapHighlightColor:"transparent",marginLeft:-11,marginRight:16,[`&.${n.disabled}`]:{cursor:"default"}},o.labelPlacement==="start"&&{flexDirection:"row-reverse",marginLeft:16,marginRight:-11},o.labelPlacement==="top"&&{flexDirection:"column-reverse",marginLeft:16},o.labelPlacement==="bottom"&&{flexDirection:"column",marginLeft:16},{[`& .${n.label}`]:{[`&.${n.disabled}`]:{color:(e.vars||e).palette.text.disabled}}})),V=M("span",{name:"MuiFormControlLabel",slot:"Asterisk",overridesResolver:(e,o)=>o.asterisk})(({theme:e})=>({[`&.${n.error}`]:{color:(e.vars||e).palette.error.main}})),X=k.forwardRef(function(o,a){var i,s;const r=U({props:o,name:"MuiFormControlLabel"}),{className:b,componentsProps:q={},control:c,disabled:C,disableTypography:$,label:E,labelPlacement:z="end",required:P,slotProps:N={}}=r,O=w(r,G),u=H(),v=(i=C??c.props.disabled)!=null?i:u==null?void 0:u.disabled,g=P??c.props.required,L={disabled:v,required:g};["checked","name","onChange","value","inputRef"].forEach(m=>{typeof c.props[m]>"u"&&typeof r[m]<"u"&&(L[m]=r[m])});const D=I({props:r,muiFormControl:u,states:["error"]}),f=p({},r,{disabled:v,labelPlacement:z,required:g,error:D.error}),y=J(f),h=(s=N.typography)!=null?s:q.typography;let t=E;return t!=null&&t.type!==x&&!$&&(t=l.jsx(x,p({component:"span"},h,{className:T(y.label,h==null?void 0:h.className),children:t}))),l.jsxs(Q,p({className:T(y.root,b),ownerState:f,ref:a},O,{children:[k.cloneElement(c,L),g?l.jsxs(K,{display:"block",children:[t,l.jsxs(V,{ownerState:f,"aria-hidden":!0,className:y.asterisk,children:["â€‰","*"]})]}):t]}))}),{fn:Z}=__STORYBOOK_MODULE_TEST__,de={title:"ATOMS/Checkbox",component:j,parameters:{controls:{exclude:["onClick"]}},argTypes:{color:{options:["primary","secondary","info"],control:{type:"select"}},size:{control:{type:"select"},options:["large","medium","small"]}},args:{onClick:Z()}},d={args:{color:"primary",size:"medium"},render:e=>l.jsx(X,{sx:{gap:1,alignItems:"flex-start"},control:l.jsx(j,{...e,defaultChecked:!0}),label:l.jsx(x,{variant:"body2",color:"text.secondary",sx:{userSelect:"none",maxWidth:450},children:'a longer label and will displayed at a smaller size in order to conserve valuable space.  This can be used to display some disclaimer about terms or conditions that might be a bit too long for a normal label area"'})})};var _,F,R;d.parameters={...d.parameters,docs:{...(_=d.parameters)==null?void 0:_.docs,source:{originalSource:`{
  args: {
    color: 'primary',
    size: "medium"
  },
  render: args => <FormControlLabel sx={{
    gap: 1,
    alignItems: "flex-start"
  }} control={<CheckBox {...args} defaultChecked />} label={<Typography variant="body2" color="text.secondary" sx={{
    userSelect: "none",
    maxWidth: 450
  }}>\r
                a longer label and will displayed at a smaller size in order to conserve\r
                valuable space.  This can be used to display some disclaimer about\r
                terms or conditions that might be a bit too long for a normal label area"\r
            </Typography>} />
}`,...(R=(F=d.parameters)==null?void 0:F.docs)==null?void 0:R.source}}};const pe=["Mutliline"];export{d as Mutliline,pe as __namedExportsOrder,de as default};
