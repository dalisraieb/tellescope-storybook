import{j as t}from"./iframe-CpdnR0i2.js";import{I as i}from"./input-D6SmNVo1.js";import{S as p}from"./Star-BqTWP5ux.js";import"./FormControl-8E0NZ6Fd.js";import"./styled-DujYcmrZ.js";import"./utils-DoM3o7-Q.js";import"./useFormControl-Bdg8Z9sC.js";import"./generateUtilityClasses-DDi6EuTn.js";import"./isMuiElement-5-QtcHpW.js";import"./TextField-grUENmEg.js";import"./Select-DbmNEHLt.js";import"./useSlotProps-DcuCg741.js";import"./resolveComponentProps-C7XGfMdE.js";import"./isHostComponent-DVu5iVWx.js";import"./useForkRef-k7JvqZ8G.js";import"./Paper-CL1wgyoG.js";import"./Grow-CSCmvqx_.js";import"./useTheme-dL_JtiI5.js";import"./utils-Be2lOGi8.js";import"./TransitionGroupContext-B3hU1AzR.js";import"./index-CoYqnUvw.js";import"./index-wcffcyWy.js";import"./useTimeout-BgZTaRCc.js";import"./getReactElementRef-dg5jktwz.js";import"./ownerDocument-DW-IO8s5.js";import"./ownerWindow-BN2rbQ_G.js";import"./Modal-DFczexqp.js";import"./createChainedFunction-BO_9K8Jh.js";import"./List-B7_zldcA.js";import"./useControlled-d9yX6gVw.js";import"./formControlState-Dq1zat_P.js";import"./createSvgIcon-C4MRlNQH.js";import"./InputBase-DoBoD0Ub.js";import"./InputLabel-CkLjBIwK.js";import"./FormLabel-BvCR-wSo.js";import"./Typography-DUyUrCFr.js";import"./createSvgIcon-C3FiYK1r.js";import"./useIsFocusVisible-BvCl6UH0.js";const U={title:"ATOMS/FormInputs/Input",component:i,parameters:{controls:{include:["appearance","size","CustomIcon"]}},argTypes:{appearance:{options:["standard","filled","outlined","distinct"],control:{type:"select"}},size:{control:{type:"select"},options:["medium","small"]},CustomIcon:{options:["start","end"],control:{type:"select"}}},args:{CustomIcon:"start"}},r={args:{appearance:"standard",size:"medium"},render:({CustomIcon:o,...e})=>t.jsx(i,{appearance:e.appearance,size:e.size,disabled:!1,label:"Label",error:!1,startIcon:o==="start"?t.jsx(p,{}):void 0,endIcon:o==="end"?t.jsx(p,{}):void 0})};var a,n,s;r.parameters={...r.parameters,docs:{...(a=r.parameters)==null?void 0:a.docs,source:{originalSource:`{
  args: {
    appearance: "standard",
    size: "medium"
  },
  render: ({
    CustomIcon,
    ...args
  }: StoryProps) => {
    return <Input appearance={args.appearance} size={args.size} disabled={false} label="Label" error={false} startIcon={CustomIcon === "start" ? <StarIcon /> : undefined} endIcon={CustomIcon === "end" ? <StarIcon /> : undefined} />;
  }
}`,...(s=(n=r.parameters)==null?void 0:n.docs)==null?void 0:s.source}}};const V=["CustomIcon"];export{r as CustomIcon,V as __namedExportsOrder,U as default};
