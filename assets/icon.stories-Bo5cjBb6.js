import{r as f,a as x,g as k,j as r}from"./iframe-DHkDeS4D.js";import{C as a}from"./checkbox-CvZVQMPb.js";import{r as I}from"./createSvgIcon-BcIawX6P.js";import{S as _}from"./Stack-Cbkqjta9.js";import"./TransitionGroupContext-CbOHklGW.js";import"./SwitchBase-BICt3c8w.js";import"./useFormControl-DnPIpqAP.js";import"./createSvgIcon-C2P4Wf-q.js";import"./ButtonBase-ChIxzj4n.js";import"./useIsFocusVisible-BKpNlkVY.js";import"./createChainedFunction-BO_9K8Jh.js";import"./useId-C77_bDNT.js";var o={},s;function g(){if(s)return o;s=1;var e=f();Object.defineProperty(o,"__esModule",{value:!0}),o.default=void 0;var c=e(I()),n=x();return o.default=(0,c.default)((0,n.jsx)("path",{d:"m12 21.35-1.45-1.32C5.4 15.36 2 12.28 2 8.5 2 5.42 4.42 3 7.5 3c1.74 0 3.41.81 4.5 2.09C13.09 3.81 14.76 3 16.5 3 19.58 3 22 5.42 22 8.5c0 3.78-3.4 6.86-8.55 11.54z"}),"Favorite"),o}var h=g();const m=k(h);var i={},u;function j(){if(u)return i;u=1;var e=f();Object.defineProperty(i,"__esModule",{value:!0}),i.default=void 0;var c=e(I()),n=x();return i.default=(0,c.default)((0,n.jsx)("path",{d:"M22 6c0-1.1-.9-2-2-2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2zm-2 0-8 5-8-5zm0 12H4V8l8 5 8-5z"}),"EmailOutlined"),i}var O=j();const l=k(O),{fn:E}=__STORYBOOK_MODULE_TEST__,w={title:"ATOMS/Checkbox",component:a,parameters:{controls:{exclude:["onClick"]}},argTypes:{color:{options:["primary","secondary","info"],control:{type:"select"}},size:{control:{type:"select"},options:["large","medium","small"]},icon:{control:{type:"select"},options:["checkmark","icon"]}},args:{onClick:E()}},t={args:{color:"primary",size:"medium",icon:"checkmark"},render:e=>r.jsxs(_,{direction:"row",spacing:2,alignItems:"center",children:[r.jsx(a,{...e,icon:r.jsx(m,{}),checkedIcon:e.icon==="icon"?r.jsx(m,{}):void 0}),r.jsx(a,{...e,icon:r.jsx(l,{}),checkedIcon:e.icon==="icon"?r.jsx(l,{}):void 0})]})};var d,p,v;t.parameters={...t.parameters,docs:{...(d=t.parameters)==null?void 0:d.docs,source:{originalSource:`{
  args: {
    color: 'primary',
    size: "medium",
    icon: 'checkmark'
  },
  render: args => <Stack direction={"row"} spacing={2} alignItems="center">\r
            <CheckBox {...args} icon={<FavoriteIcon />} checkedIcon={args.icon === "icon" ? <FavoriteIcon /> : undefined} />\r
            <CheckBox {...args} icon={<EmailOutlinedIcon />} checkedIcon={args.icon === "icon" ? <EmailOutlinedIcon /> : undefined} />\r
        </Stack>
}`,...(v=(p=t.parameters)==null?void 0:p.docs)==null?void 0:v.source}}};const H=["Icon"];export{t as Icon,H as __namedExportsOrder,w as default};
